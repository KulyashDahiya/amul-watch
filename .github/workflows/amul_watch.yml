name: Amul Watch (every 5 min)

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Restore/persist the local state file across runs
      - name: Restore state.json cache
        uses: actions/cache@v4
        with:
          path: state.json
          key: amul-watch-state-${{ runner.os }}-v1-${{ github.run_id }}
          restore-keys: |
            amul-watch-state-${{ runner.os }}-v1-

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run watcher
        env:
          # --- required for notifications; you already created these as repo secrets ---
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

          # --- watcher settings ---
          # Single alias only (as requested)
          AMUL_TARGET_ALIASES: "amul-high-protein-rose-lassi-200-ml-or-pack-of-30"
          # Force an alert even without a change? (0/1)
          FORCE_ALERT: "0"
          # Pincode you gave (maps to substore on the fly)
          AMUL_PINCODE: "251001"
        run: |
          python amul_watch.py

      # Save updated state.json back into the cache key for this run
      - name: Save state.json (artifact for inspection)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: state-json
          path: state.json
          if-no-files-found: ignore